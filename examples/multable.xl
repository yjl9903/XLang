fn getDigit(a: number) -> number {
  if (a == 0) {
    return 1;
  } else if (a < 0) {
    return getDigit(-a);
  }
  let c = 0;
  while (a > 0) {
    c = c + 1;
    a = a / 10;
  }
  return c;
}

fn main(a: number) {
  const aDigit = getDigit(a);
  const mxDigit = getDigit(a * a);
  for (let i = 1; i <= a; i = i + 1) {
    let row = "", spaceI = "";
    for (let k = getDigit(i); k < aDigit; k = k + 1) {
      spaceI = spaceI + " ";
    }
    for (let j = 1; j <= i; j = j + 1) {
      let spaceJ = "";
      for (let k = getDigit(j); k < aDigit; k = k + 1) {
        spaceJ = spaceJ + " ";
      }
      const col = spaceJ + j + " x " + spaceI + i + " = " + (i * j) + " ";
      row = row + col;
      for (let k = getDigit(i * j); k < mxDigit; k = k + 1) {
        row = row + " ";
      }
    }
    print(row);
  }
}